{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\PC\\\\Documents\\\\Mis cursos\\\\Udemy\\\\Javascript moderno\\\\fitnessapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\Mis cursos\\\\Udemy\\\\Javascript moderno\\\\fitnessapp\\\\src\\\\pages\\\\ExerciseContainer.js\";\nimport React, { useState, useEffect } from 'react';\nimport Exercise from \"../pages/Exercise\";\nimport Loading from '../components/Loading';\nimport FatalError from \"../pages/500\";\n\nconst ExerciseContainer = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        error = _useState6[0],\n        setError = _useState6[1];\n\n  useEffect(() => {\n    const fetchExercises = async () => {\n      try {\n        const url = 'http://localhost:8000/api/exercises';\n        let response = await fetch(url);\n        const data = await response.json();\n        setData(data);\n        setLoading(false);\n      } catch (error) {\n        setLoading(false);\n        setError(error);\n      }\n    };\n\n    fetchExercises();\n  }, []);\n  if (loading) return React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  });\n  if (error) return React.createElement(FatalError, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  });\n  return React.createElement(Exercise, {\n    loading: loading,\n    userName: \"Alexander Zapata\",\n    exercisesData: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  });\n};\n\nexport default ExerciseContainer;","map":{"version":3,"sources":["C:/Users/PC/Documents/Mis cursos/Udemy/Javascript moderno/fitnessapp/src/pages/ExerciseContainer.js"],"names":["React","useState","useEffect","Exercise","Loading","FatalError","ExerciseContainer","data","setData","loading","setLoading","error","setError","fetchExercises","url","response","fetch","json"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAGA,MAAMC,iBAAiB,GAAG,MAAM;AAAA,oBACJL,QAAQ,CAAC,EAAD,CADJ;AAAA;AAAA,QACrBM,IADqB;AAAA,QACfC,OADe;;AAAA,qBAEEP,QAAQ,CAAC,KAAD,CAFV;AAAA;AAAA,QAErBQ,OAFqB;AAAA,QAEZC,UAFY;;AAAA,qBAGFT,QAAQ,CAAC,IAAD,CAHN;AAAA;AAAA,QAGrBU,KAHqB;AAAA,QAGdC,QAHc;;AAK5BV,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,cAAc,GAAG,YAAW;AAC9B,UAAI;AACA,cAAMC,GAAG,GAAG,qCAAZ;AACA,YAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA1B;AAEA,cAAMP,IAAI,GAAG,MAAMQ,QAAQ,CAACE,IAAT,EAAnB;AACAT,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAPD,CAOE,OAAOC,KAAP,EAAc;AACZD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACH;AACJ,KAZD;;AAaAE,IAAAA,cAAc;AACjB,GAfQ,EAeN,EAfM,CAAT;AAgBI,MAAIJ,OAAJ,EACI,OAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEJ,MAAIE,KAAJ,EACI,OAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEJ,SAAO,oBAAC,QAAD;AACH,IAAA,OAAO,EAAIF,OADR;AAEH,IAAA,QAAQ,EAAG,kBAFR;AAGH,IAAA,aAAa,EAAIF,IAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAKP,CAhCD;;AAiCC,eAAeD,iBAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\n\r\nimport Exercise from \"../pages/Exercise\"\r\nimport Loading from '../components/Loading'\r\nimport FatalError from \"../pages/500\"\r\n\r\n\r\nconst ExerciseContainer = () => {\r\n    const [data, setData] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const fetchExercises = async () =>{\r\n            try {\r\n                const url = 'http://localhost:8000/api/exercises'\r\n                let response = await fetch(url)\r\n\r\n                const data = await response.json()\r\n                setData(data)\r\n                setLoading(false)\r\n            } catch (error) {\r\n                setLoading(false)\r\n                setError(error)\r\n            }\r\n        }\r\n        fetchExercises()\r\n    }, [])\r\n        if (loading)\r\n            return <Loading />\r\n\r\n        if (error) \r\n            return <FatalError />\r\n\r\n        return <Exercise\r\n            loading = {loading}\r\n            userName = \"Alexander Zapata\"\r\n            exercisesData = {data} \r\n            />\r\n}\r\n export default ExerciseContainer"]},"metadata":{},"sourceType":"module"}